name: Deploy Next.js App

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: ⚙️ Install Dependencies
        run: npm ci

      - name: 🏗️ Build Application
        run: npm run build

      - name: 📦 Prepare Files for Upload
        run: |
          mkdir -p output
          cp -r .next public package.json package-lock.json output/

      - name: 📤 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: output

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: 📥 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: build

      - name: ⚙️ Set Deployment Variables and Prepare SSH Key
        id: set-vars
        run: |
          BRANCH=${GITHUB_REF##*/}

          if [ "$BRANCH" = "main" ]; then
            echo "DEPLOY_DIR=${{ secrets.PROD_SERVER_PATH }}" >> $GITHUB_ENV
            echo "SERVER=${{ secrets.PROD_SERVER_HOST }}" >> $GITHUB_ENV
            echo "PROCESS_NAME=${{ secrets.PROD_PROCESS_NAME }}" >> $GITHUB_ENV
            echo "REMOTE_USER=${{ secrets.PROD_SERVER_USER }}" >> $GITHUB_ENV
            echo "SSH_PORT=${{ secrets.PROD_SSH_PORT }}" >> $GITHUB_ENV
            echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > id_rsa
            echo "${{ secrets.PROD_ENV_SECRET }}" > .env
            echo "PORT=5005" >> .env

          elif [ "$BRANCH" = "dev" ]; then
            echo "DEPLOY_DIR=${{ secrets.DEV_SERVER_PATH }}" >> $GITHUB_ENV
            echo "SERVER=${{ secrets.DEV_SERVER_HOST }}" >> $GITHUB_ENV
            echo "PROCESS_NAME=${{ secrets.DEV_PROCESS_NAME }}" >> $GITHUB_ENV
            echo "REMOTE_USER=${{ secrets.DEV_SERVER_USER }}" >> $GITHUB_ENV
            echo "SSH_PORT=${{ secrets.DEV_SSH_PORT }}" >> $GITHUB_ENV
            echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > id_rsa
            echo "${{ secrets.DEV_ENV_SECRET }}" > .env
            echo "PORT=5001" >> .env

          else
            echo "❌ Unknown branch: $BRANCH"
            exit 1
          fi

          chmod 600 id_rsa .env

      - name: 📦 Package Application
        run: |
          tar -czf deployment.tar.gz -C build .

      - name: 🚀 Deploy to Server
        run: |
          unset SSH_AUTH_SOCK
          export SSH_AUTH_SOCK=

          chmod 600 id_rsa

          cat > ssh_config << EOF
          Host remote-server
            HostName $SERVER
            User $REMOTE_USER
            Port $SSH_PORT
            IdentityFile $(pwd)/id_rsa
            IdentitiesOnly yes
            StrictHostKeyChecking no
          EOF

          scp -F ssh_config deployment.tar.gz remote-server:$DEPLOY_DIR/deployment.tar.gz
          scp -F ssh_config .env remote-server:$DEPLOY_DIR/.env

          ssh -F ssh_config remote-server << EOF
            cd $DEPLOY_DIR
            tar -xzf deployment.tar.gz
            rm deployment.tar.gz
            npm ci
            pm2 reload $PROCESS_NAME || pm2 start npm --name $PROCESS_NAME -- start
          EOF